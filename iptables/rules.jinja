*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
:TCP - [0:0]
:UDP - [0:0]
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate INVALID -j DROP
-A INPUT -p icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT
-A INPUT -p udp -m conntrack --ctstate NEW -j UDP
-A INPUT -p tcp --syn -m conntrack --ctstate NEW -j TCP
-A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
-A INPUT -p tcp -j REJECT --reject-with tcp-rst
-A INPUT -j REJECT --reject-with icmp-proto-unreachable
{%- if accept_tcp_ports|length == 1 %}
-A TCP -p tcp --dport {{ accept_tcp_ports[0] }} -j ACCEPT
{%- elif accept_tcp_ports|length > 1 %}
-A TCP -p tcp -m multiport --dports {{ accept_tcp_ports|join(",") }} -j ACCEPT
{% endif -%}
{%- if accept_upd_ports|length == 1 %}
-A UDP -p upd --dport {{ accept_upd_ports[0] }} -j ACCEPT
{%- elif accept_upd_ports|length > 1 %}
-A UDP -p upd -m multiport --dports {{ accept_upd_ports|join(",") }} -j ACCEPT
{% endif -%}
{%- for port in limit_tcp_ports %}
-A TCP -p tcp --dport {{ port }} -m recent --update --name limit-tcp-{{ port}} --hitcount 3 --seconds 30 -j REJECT --reject-with icmp-port-unreachable
-A TCP -p tcp --dport {{ port }} -m recent --set --name limit-tcp-{{ port}} -j ACCEPT
{% endfor -%}
{%- for port in limit_udp_ports %}
-A UDP -p udp --dport {{ port }} -m recent --update --name limit-udp-{{ port}} --hitcount 3 --seconds 30 -j REJECT --reject-with icmp-port-unreachable
-A UDP -p udp --dport {{ port }} -m recent --set --name limit-udp-{{ port}} -j ACCEPT
{% endfor -%}
COMMIT
